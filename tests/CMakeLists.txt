project(tests)
enable_testing()
if (NOT GTEST_FOUND)
    find_package(GTest REQUIRED)
endif()
if (NOT GMOCK_FOUND)
    find_package(GMock REQUIRED)
endif()
include(${CMAKE_SOURCE_DIR}/cmake/CMakeLists_compiler.txt)
if(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-global-constructors -Wno-missing-prototypes -Wno-invalid-offsetof")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-weak-vtables")
elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL "GNU")
    # using GCC
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-missing-declarations")
elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL "MSVC")

endif()
include_directories(${CMAKE_SOURCE_DIR}/src/)
include_directories(SYSTEM ${GTEST_INCLUDE_DIRS})
include_directories(SYSTEM ${GLM_INCLUDE_DIRS})
include_directories(SYSTEM ${GMOCK_INCLUDE_DIRS})
include_directories(SYSTEM ${GLEW_INCLUDE_DIRS})

function(add_gtest name sources)
    add_executable(${name} ${sources} $<TARGET_OBJECTS:opengl_lib>)
    target_link_libraries(${name} ${GMOCK_BOTH_LIBRARIES} ${USED_LIBRARIES})
    add_test(AllTests ${name})
endfunction()

add_gtest(terrain_test "terrain_test.cpp")
add_gtest(camera_test "camera_test.cpp")
#add_gtest(cube_test "cube_test.cpp")
add_gtest(vertex_test "vertex_test.cpp")
